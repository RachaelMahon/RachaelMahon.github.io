{"ast":null,"code":"var _jsxFileName = \"/Users/rachaelmahon/IdeaProjects/faberge/faberge/components/MapChart.js\";\nvar __jsx = React.createElement;\nimport React, { memo } from \"react\";\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport data from '../data/mapData.json';\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nconst MapChart = ({\n  setTooltipContent\n}) => {\n  return __jsx(React.Fragment, null, __jsx(ComposableMap, {\n    \"data-tip\": \"\",\n    projectionConfig: {\n      scale: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(ZoomableGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(Geographies, {\n    geography: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, ({\n    geographies\n  }) => geographies.map(geo => __jsx(Geography, {\n    key: geo.rsmKey,\n    geography: geo,\n    onMouseEnter: () => {\n      let KEITH_FACT_TEXT;\n      let FABERGE_EGGS_COUNT;\n      const {\n        NAME,\n        POP_EST,\n        FABERGE_EGGS,\n        KEITH_FACT\n      } = geo.properties;\n\n      if (!FABERGE_EGGS) {\n        FABERGE_EGGS_COUNT = \"zero\";\n      } else {\n        FABERGE_EGGS_COUNT = FABERGE_EGGS;\n      }\n\n      if (!KEITH_FACT) {\n        KEITH_FACT_TEXT = \"Keith hasn't made a holy show of himself in this country yet. Check back later.\";\n      } else {\n        KEITH_FACT_TEXT = KEITH_FACT;\n      }\n\n      setTooltipContent(`${NAME} - Faberge Eggs: ${FABERGE_EGGS_COUNT} - Keith fact: ${KEITH_FACT_TEXT}`);\n    },\n    onMouseLeave: () => {\n      setTooltipContent(\"\");\n    },\n    style: {\n      default: {\n        fill: \"#D6D6DA\",\n        outline: \"none\"\n      },\n      hover: {\n        fill: \"#F53\",\n        outline: \"none\"\n      },\n      pressed: {\n        fill: \"#E42\",\n        outline: \"none\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))))));\n};\n\nexport default memo(MapChart);","map":{"version":3,"sources":["/Users/rachaelmahon/IdeaProjects/faberge/faberge/components/MapChart.js"],"names":["React","memo","ZoomableGroup","ComposableMap","Geographies","Geography","data","geoUrl","rounded","num","Math","round","MapChart","setTooltipContent","scale","geographies","map","geo","rsmKey","KEITH_FACT_TEXT","FABERGE_EGGS_COUNT","NAME","POP_EST","FABERGE_EGGS","KEITH_FACT","properties","default","fill","outline","hover","pressed"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,mBALP;AAMA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,MAAMC,MAAM,GACV,wGADF;;AAGA,MAAMC,OAAO,GAAGC,GAAG,IAAI;AACrB,MAAIA,GAAG,GAAG,UAAV,EAAsB;AACpB,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,SAAjB,IAA8B,EAA9B,GAAmC,IAA1C;AACD,GAFD,MAEO,IAAIA,GAAG,GAAG,OAAV,EAAmB;AACxB,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,MAAjB,IAA2B,EAA3B,GAAgC,GAAvC;AACD,GAFM,MAEA;AACL,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,GAAjB,IAAwB,EAAxB,GAA6B,GAApC;AACD;AACF,CARD;;AAUA,MAAMG,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AAC1C,SACE,4BACE,MAAC,aAAD;AAAe,gBAAS,EAAxB;AAA2B,IAAA,gBAAgB,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAER,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAES,IAAAA;AAAF,GAAD,KACCA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IACjB,MAAC,SAAD;AACE,IAAA,GAAG,EAAEA,GAAG,CAACC,MADX;AAEE,IAAA,SAAS,EAAED,GAFb;AAGE,IAAA,YAAY,EAAE,MAAM;AAClB,UAAIE,eAAJ;AACA,UAAIC,kBAAJ;AACA,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA,YAAjB;AAA+BC,QAAAA;AAA/B,UAA8CP,GAAG,CAACQ,UAAxD;;AACA,UAAI,CAACF,YAAL,EAAmB;AACfH,QAAAA,kBAAkB,GAAG,MAArB;AACH,OAFD,MAEO;AACHA,QAAAA,kBAAkB,GAAGG,YAArB;AACH;;AACD,UAAI,CAACC,UAAL,EAAiB;AACbL,QAAAA,eAAe,GAAG,iFAAlB;AACH,OAFD,MAEO;AACHA,QAAAA,eAAe,GAAGK,UAAlB;AACH;;AACDX,MAAAA,iBAAiB,CAAE,GAAEQ,IAAK,oBAAmBD,kBAAmB,kBAAiBD,eAAgB,EAAhF,CAAjB;AACD,KAlBH;AAmBE,IAAA,YAAY,EAAE,MAAM;AAClBN,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,KArBH;AAsBE,IAAA,KAAK,EAAE;AACLa,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,SADC;AAEPC,QAAAA,OAAO,EAAE;AAFF,OADJ;AAKLC,MAAAA,KAAK,EAAE;AACLF,QAAAA,IAAI,EAAE,MADD;AAELC,QAAAA,OAAO,EAAE;AAFJ,OALF;AASLE,MAAAA,OAAO,EAAE;AACPH,QAAAA,IAAI,EAAE,MADC;AAEPC,QAAAA,OAAO,EAAE;AAFF;AATJ,KAtBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF,CADF,CADF,CADF;AAmDD,CApDD;;AAsDA,eAAe3B,IAAI,CAACW,QAAD,CAAnB","sourcesContent":["import React, { memo } from \"react\";\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography\n} from \"react-simple-maps\";\nimport data from '../data/mapData.json';\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nconst MapChart = ({ setTooltipContent }) => {\n  return (\n    <>\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\n        <ZoomableGroup>\n          <Geographies geography={data}>\n            {({ geographies }) =>\n              geographies.map(geo => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={() => {\n                    let KEITH_FACT_TEXT;\n                    let FABERGE_EGGS_COUNT;\n                    const { NAME, POP_EST, FABERGE_EGGS, KEITH_FACT } = geo.properties;\n                    if (!FABERGE_EGGS) {\n                        FABERGE_EGGS_COUNT = \"zero\";\n                    } else {\n                        FABERGE_EGGS_COUNT = FABERGE_EGGS;\n                    }\n                    if (!KEITH_FACT) {\n                        KEITH_FACT_TEXT = \"Keith hasn't made a holy show of himself in this country yet. Check back later.\";\n                    } else {\n                        KEITH_FACT_TEXT = KEITH_FACT;\n                    }\n                    setTooltipContent(`${NAME} - Faberge Eggs: ${FABERGE_EGGS_COUNT} - Keith fact: ${KEITH_FACT_TEXT}`);\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  style={{\n                    default: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\"\n                    },\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\"\n                    },\n                    pressed: {\n                      fill: \"#E42\",\n                      outline: \"none\"\n                    }\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n    </>\n  );\n};\n\nexport default memo(MapChart);\n"]},"metadata":{},"sourceType":"module"}